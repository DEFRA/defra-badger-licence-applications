<Activity mc:Ignorable="sap sap2010" x:Class="Process_Transaction_2" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:d="clr-namespace:DRACOE_PopUps_64;assembly=DRACOE.PopUps.64" xmlns:d1="clr-namespace:DRACOE_Credentials_64;assembly=DRACOE.Credentials.64" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Diagnostics;assembly=System.Private.CoreLib" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:sn="clr-namespace:System.Net;assembly=System.Net.Primitives" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ucas="clr-namespace:UiPath.Core.Activities.Storage;assembly=UiPath.System.Activities" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>2323,1784.5</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Process_Transaction_2_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Net</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Core.Activities.Storage</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>DRACOE_PopUps_64</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Persistence.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>DRACOE.PopUps.64</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " sap:VirtualizedContainerService.HintSize="940,2134.5" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="strRegistrationNum" />
      <Variable x:TypeArguments="sn:NetworkCredential" Name="ExcelCreds" />
      <Variable x:TypeArguments="x:String" Name="strApplicantSubject" />
      <Variable x:TypeArguments="x:String" Name="strApplicantBody" />
      <Variable x:TypeArguments="x:Boolean" Name="booEmailFound" />
      <Variable x:TypeArguments="sd1:DataTable" Name="dtRegistrationDetails" />
      <Variable x:TypeArguments="x:String" Name="strProjectSubject" />
      <Variable x:TypeArguments="x:String" Name="strProjectBody" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">440,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Height">2021.5</x:Double>
        <x:Double x:Key="Width">906.25</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">470,77.5 470,127.5</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID15</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,333.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,386.5 470,436.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope - Master Spreadsheet" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_2">
        <ueab:ExcelProcessScopeX.Body>
          <ActivityAction x:TypeArguments="ui:IExcelProcess">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="602,666" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ExcelApplicationCard CreateNewFile="False" DisplayName="Use Excel File - Master Spreadsheet" sap:VirtualizedContainerService.HintSize="540,555" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_2" Password="[ExcelCreds.Password]" ReadFormatting="RawValue" ResizeWindow="None" WorkbookPath="[g_Config(&quot;MasterSpreadsheetPath&quot;).ToString]">
                <ueab:ExcelApplicationCard.Body>
                  <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Excel Actions" sap:VirtualizedContainerService.HintSize="506,282" sap2010:WorkflowViewState.IdRef="Sequence_40">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ueab:ReadRangeX DisplayName="Read Registered Applicant Details" sap:VirtualizedContainerService.HintSize="444,171" sap2010:WorkflowViewState.IdRef="ReadRangeX_4" Range="[Excel.Sheet(g_Config(&quot;MasterSpreadsheetNewApplicationSheet&quot;).ToString).Range(&quot;A1&quot;)]" ReadFormatting="RawValue" SaveTo="[dtRegistrationDetails]" VisibleOnly="False" />
                    </Sequence>
                  </ActivityAction>
                </ueab:ExcelApplicationCard.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ueab:ExcelApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelProcessScopeX.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ueab:ExcelProcessScopeX>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">370,436.5</av:Point>
              <av:Size x:Key="ShapeSize">200,53</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">470,489.5 470,539.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:FilterDataTable DataTable="[dtRegistrationDetails]" DisplayName="Filter to Registered Details" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="FilterDataTable_2" OutputDataTable="[dtRegistrationDetails]" SelectColumnsMode="Remove">
            <ui:FilterDataTable.Filters>
              <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                  <ui:FilterOperationArgument.Column>
                    <InArgument x:TypeArguments="x:String">["Licence number issued"]</InArgument>
                  </ui:FilterOperationArgument.Column>
                  <ui:FilterOperationArgument.Operand>
                    <InArgument x:TypeArguments="x:String">[strRegistrationNum]</InArgument>
                  </ui:FilterOperationArgument.Operand>
                </ui:FilterOperationArgument>
              </scg:List>
            </ui:FilterDataTable.Filters>
            <ui:FilterDataTable.SelectColumns>
              <scg:List x:TypeArguments="InArgument" Capacity="4">
                <x:Null />
              </scg:List>
            </ui:FilterDataTable.SelectColumns>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:FilterDataTable>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">370,539.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,53</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">470,592.5 470,642.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[dtRegistrationDetails.Rows.Count &lt;&gt; 1]" DisplayName="One Row Returned?" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="If_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,179" sap2010:WorkflowViewState.IdRef="Sequence_41">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Throw DisplayName="Throw BRE" Exception="[New BusinessRuleException(&quot;Either no registration details or multiple registration rows for Licence Number provided: &quot;+strRegistrationNum)]" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="Throw_3" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_42" />
                </If.Else>
              </If>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">370,642.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,83</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">470,725.5 470,796.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Format Applicant Email Body &amp; Subject" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_31">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign Subject" sap:VirtualizedContainerService.HintSize="479,83" sap2010:WorkflowViewState.IdRef="Assign_30">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[strApplicantSubject]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[g_Config("Applicant Email Subject").ToString.Replace("{license_number}",strRegistrationNum)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ucas:ReadStorageText TimeoutMS="{x:Null}" DisplayName="Read Email Template" sap:VirtualizedContainerService.HintSize="479,135" sap2010:WorkflowViewState.IdRef="ReadStorageText_1" Path="Applicant Email Template.txt" Result="[strApplicantBody]" StorageBucketName="Email Templates" />
                    <ui:MultipleAssign DisplayName="Format Email Body" sap:VirtualizedContainerService.HintSize="479,179" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strApplicantBody]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strApplicantBody.Replace("{name}", dtRegistrationDetails.Rows(0).Item("Name").ToString)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strApplicantBody]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strApplicantBody.Replace("{licence_number}", strRegistrationNum)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[strApplicantBody]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strApplicantBody.Replace("{activity}", dtRegistrationDetails.Rows(0).Item("What activity do you plan to do with this licence?").ToString)]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                    </ui:MultipleAssign>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID3" Condition="[not(CBool(g_Config(&quot;Unattended&quot;))) AND CBool(g_Config(&quot;PausePoint2&quot;))]" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="77,87" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">431.5,796.5</av:Point>
                          <av:Size x:Key="ShapeSize">77,87</av:Size>
                          <av:PointCollection x:Key="TrueConnector">431.5,840 250,840 250,908.5</av:PointCollection>
                          <av:PointCollection x:Key="FalseConnector">508.5,840 680.5,840 680.5,1022.04 470,1022.04 470,1053.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">150,908.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,83</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">250,991.5 250,1021.5 470,1021.5 470,1053.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_32">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Stop">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sd:Stopwatch">[g_swProcessingTimer]</InArgument>
                              </InvokeMethod.TargetObject>
                            </InvokeMethod>
                            <d:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 2" sap:VirtualizedContainerService.HintSize="388,403" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\PausePoint.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Email Content&lt;/h1&gt;&lt;p&gt;The email to the applicant is now ready to be sent with the following content:&lt;/p&gt;&lt;p&gt;&lt;b&gt;Recipient:&lt;/b&gt; &quot;+dtRegistrationDetails.Rows(0).Item(&quot;Email address&quot;).ToString+&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;Subject:&lt;/b&gt; &quot;+strApplicantSubject+&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;Email Body:&lt;/b&gt; &quot;+strApplicantBody+&quot;&lt;/p&gt;&quot;]" IN_PopupTitle="Pause Point 2" IN_WidthHeight="[{600,600}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_1">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </d:Generic_PopUp>
                            <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Start">
                              <InvokeMethod.TargetObject>
                                <InArgument x:TypeArguments="sd:Stopwatch">[g_swProcessingTimer]</InArgument>
                              </InvokeMethod.TargetObject>
                            </InvokeMethod>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID0">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">370,1053.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,53</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">470,1106.5 470,1148.5</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[g_Config(&quot;AccountName&quot;).ToString]" Body="[strApplicantBody]" DisplayName="Send Email to Applicant" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal" Subject="[strApplicantSubject]" To="[dtRegistrationDetails.Rows(0).Item(&quot;Email address&quot;).ToString]">
                                <ui:SendOutlookMail.Files>
                                  <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                </ui:SendOutlookMail.Files>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendOutlookMail>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID5">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">370,1148.5</av:Point>
                                      <av:Size x:Key="ShapeSize">200,83</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">470,1231.5 470,1281.5</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Get Sent Email Message" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:String" Name="strSentEmailSubject" />
                                      <Variable x:TypeArguments="x:Int32" Name="intLoopCounter" />
                                      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listSentMailMessage" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ReportStatus DisplayName="Report Status - Checking for Sent Email" sap:VirtualizedContainerService.HintSize="586,91" sap2010:WorkflowViewState.IdRef="ReportStatus_1" StatusText="[now.ToString(&quot;HH:mm:ss&quot;) +&quot; Checking for Sent Email&quot;]" />
                                    <Assign DisplayName="Initialise Loop Counter" sap:VirtualizedContainerService.HintSize="586,83" sap2010:WorkflowViewState.IdRef="Assign_31">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[intLoopCounter]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Keep looping until the email appears in Sent items." Condition="[strApplicantSubject &lt;&gt; strSentEmailSubject AND intLoopCounter &lt; CInt(g_Config(&quot;MaxEmailLoopCounter&quot;))]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="586,1253" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_2">
                                      <ui:InterruptibleDoWhile.Body>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1085" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Increment Counter" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="Assign_2">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">[intLoopCounter]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">[intLoopCounter + 1]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="510,91" sap2010:WorkflowViewState.IdRef="Delay_1" />
                                          <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[g_Config(&quot;AccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Get last sent email that matches the email subject text." DisplayName="Get Outlook Mail Messages" Filter="[String.Format(&quot;@SQL=&quot;&quot;urn:schemas:httpmail:date&quot;&quot; &gt;= '{0}' AND &quot;&quot;urn:schemas:httpmail:subject&quot;&quot; = '{1}'&quot;, DateTime.UtcNow.AddMinutes(-15).ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;),  strApplicantSubject)]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="510,85" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="Sent Items" MarkAsRead="False" Messages="[listSentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:GetOutlookMailMessages>
                                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,143" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Loop &quot; + intLoopCounter.ToString + &quot; Emails found &quot; + listSentMailMessage.Count.ToString]" />
                                          <If Condition="[listSentMailMessage.Count &gt; 0]" DisplayName="If Message Found" sap:VirtualizedContainerService.HintSize="510,435" sap2010:WorkflowViewState.IdRef="If_1">
                                            <If.Then>
                                              <Sequence sap:VirtualizedContainerService.HintSize="476,171" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Assign Subject of Sent Email" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[strSentEmailSubject]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[listSentMailMessage(0).Subject]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence sap:VirtualizedContainerService.HintSize="300,81" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ui:InterruptibleDoWhile.Body>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InterruptibleDoWhile>
                                    <If Condition="[intLoopCounter = CInt(g_Config(&quot;MaxEmailLoopCounter&quot;))]" DisplayName="If Cannot Find Sent Item After Max Attempts" sap:VirtualizedContainerService.HintSize="586,393" sap2010:WorkflowViewState.IdRef="If_5">
                                      <If.Then>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,210" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Throw sap2010:Annotation.AnnotationText="Unable to find sent email" DisplayName="Throw Business Exception - Unable to Find Sent Email" Exception="[New BusinessRuleException(&quot;Unable to find sent email &quot; + strApplicantSubject)]" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="Throw_2">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Throw>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                    <ui:MoveOutlookMessage Account="[g_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Sent Email" sap:VirtualizedContainerService.HintSize="586,92" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_1" MailFolder="[g_Config(&quot;Mail Parent Folder - Part 2&quot;).ToString+g_Config(&quot;Sent Applicant Email Folder&quot;).ToString]" MailMessage="[listSentMailMessage(0)]" />
                                  </Sequence>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID9" Condition="[CBool(dtRegistrationDetails.Rows(0).Item(&quot;Are you associated with a project?&quot;))]" DisplayName="Applicant Associated with Project?" sap:VirtualizedContainerService.HintSize="160,87" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <av:Point x:Key="ShapeLocation">390,1281.5</av:Point>
                                          <av:Size x:Key="ShapeSize">160,87</av:Size>
                                          <av:PointCollection x:Key="TrueConnector">390,1325 260,1325 260,1448.5</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <FlowDecision.True>
                                        <FlowStep x:Name="__ReferenceID10">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <av:Point x:Key="ShapeLocation">160,1448.5</av:Point>
                                              <av:Size x:Key="ShapeSize">200,83</av:Size>
                                              <av:PointCollection x:Key="ConnectorLocation">260,1531.5 260,1581.5</av:PointCollection>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence DisplayName="Format Project Email Body &amp; Subject" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign DisplayName="Assign Subject" sap:VirtualizedContainerService.HintSize="479,83" sap2010:WorkflowViewState.IdRef="Assign_34">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[strProjectSubject]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[g_Config("Project Email Subject").ToString.Replace("{name}",dtRegistrationDetails.Rows(0).Item("Name").ToString)]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ucas:ReadStorageText TimeoutMS="{x:Null}" DisplayName="Read Email Template" sap:VirtualizedContainerService.HintSize="479,135" sap2010:WorkflowViewState.IdRef="ReadStorageText_3" Path="Project Email Template.txt" Result="[strProjectBody]" StorageBucketName="Email Templates" />
                                            <ui:MultipleAssign DisplayName="Format Email Body" sap:VirtualizedContainerService.HintSize="479,148" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                                              <ui:MultipleAssign.AssignOperations>
                                                <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:String">[strProjectBody]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:String">[strProjectBody.Replace("{name}", dtRegistrationDetails.Rows(0).Item("Name").ToString)]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                  <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_18">
                                                    <ui:AssignOperation.To>
                                                      <OutArgument x:TypeArguments="x:String">[strProjectBody]</OutArgument>
                                                    </ui:AssignOperation.To>
                                                    <ui:AssignOperation.Value>
                                                      <InArgument x:TypeArguments="x:String">[strProjectBody.Replace("{activity}", dtRegistrationDetails.Rows(0).Item("What activity do you plan to do with this licence?").ToString)]</InArgument>
                                                    </ui:AssignOperation.Value>
                                                  </ui:AssignOperation>
                                                </scg:List>
                                              </ui:MultipleAssign.AssignOperations>
                                            </ui:MultipleAssign>
                                          </Sequence>
                                          <FlowStep.Next>
                                            <FlowDecision x:Name="__ReferenceID12" DisplayName="Pause Point 3" sap:VirtualizedContainerService.HintSize="77,87" sap2010:WorkflowViewState.IdRef="FlowDecision_4">
                                              <FlowDecision.Condition>
                                                <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="not(CBool(g_Config(&quot;Unattended&quot;))) AND CBool(g_Config(&quot;PausePoint3&quot;))" />
                                              </FlowDecision.Condition>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <av:Point x:Key="ShapeLocation">221.5,1581.5</av:Point>
                                                  <av:Size x:Key="ShapeSize">77,87</av:Size>
                                                  <av:PointCollection x:Key="TrueConnector">221.5,1625 110,1625 110,1688.5</av:PointCollection>
                                                  <av:PointCollection x:Key="FalseConnector">518.5,850 690.5,850 690.5,1032.04 480,1032.04 480,1063.5</av:PointCollection>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <FlowDecision.True>
                                                <FlowStep x:Name="__ReferenceID11">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <av:Point x:Key="ShapeLocation">10,1688.5</av:Point>
                                                      <av:Size x:Key="ShapeSize">200,83</av:Size>
                                                      <av:PointCollection x:Key="ConnectorLocation">110,1771.5 110,1801.5 260,1801.5 260,1843.5</av:PointCollection>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Sequence DisplayName="Pause Point 3" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Stop">
                                                      <InvokeMethod.TargetObject>
                                                        <InArgument x:TypeArguments="sd:Stopwatch">[g_swProcessingTimer]</InArgument>
                                                      </InvokeMethod.TargetObject>
                                                    </InvokeMethod>
                                                    <d:Generic_PopUp OUT_ProcessType="{x:Null}" OUT_strButtonSelected="{x:Null}" DisplayName="Pause Point 3" sap:VirtualizedContainerService.HintSize="388,403" IN_CSS_filepath="[&quot;/file://&quot; + Directory.GetCurrentDirectory + &quot;\Assets\Generic\PausePoint.css&quot;]" IN_ErrorMessage="The stop button was pressed" IN_PopupMessage="[&quot;&lt;h1&gt;Please Check Email Content&lt;/h1&gt;&lt;p&gt;The email to the project lead is now ready to be sent with the following content:&lt;/p&gt;&lt;p&gt;&lt;b&gt;Recipient:&lt;/b&gt; &quot;+dtRegistrationDetails.Rows(0).Item(&quot;What's your project lead's email address?&quot;).ToString+&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;Subject:&lt;/b&gt; &quot;+strProjectSubject+&quot;&lt;br&gt;&lt;br&gt;&lt;b&gt;Email Body:&lt;/b&gt; &quot;+strProjectBody+&quot;&lt;/p&gt;&quot;]" IN_PopupTitle="Pause Point 3" IN_WidthHeight="[{600,600}]" sap2010:WorkflowViewState.IdRef="Generic_PopUp_2">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </d:Generic_PopUp>
                                                    <InvokeMethod DisplayName="Invoke Method" sap:VirtualizedContainerService.HintSize="388,137" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Start">
                                                      <InvokeMethod.TargetObject>
                                                        <InArgument x:TypeArguments="sd:Stopwatch">[g_swProcessingTimer]</InArgument>
                                                      </InvokeMethod.TargetObject>
                                                    </InvokeMethod>
                                                  </Sequence>
                                                  <FlowStep.Next>
                                                    <FlowStep x:Name="__ReferenceID13">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <av:Point x:Key="ShapeLocation">160,1843.5</av:Point>
                                                          <av:Size x:Key="ShapeSize">200,53</av:Size>
                                                          <av:PointCollection x:Key="ConnectorLocation">260,1896.5 260,1938.5</av:PointCollection>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:SendOutlookMail Bcc="{x:Null}" Cc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" TimeoutMS="{x:Null}" Account="[g_Config(&quot;AccountName&quot;).ToString]" Body="[strProjectBody]" DisplayName="Send Email to Project" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal" Subject="[strProjectSubject]" To="[dtRegistrationDetails.Rows(0).Item(&quot;What's your project lead's email address?&quot;).ToString]">
                                                        <ui:SendOutlookMail.Files>
                                                          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                                        </ui:SendOutlookMail.Files>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:SendOutlookMail>
                                                      <FlowStep.Next>
                                                        <FlowStep x:Name="__ReferenceID14">
                                                          <sap:WorkflowViewStateService.ViewState>
                                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                              <av:Point x:Key="ShapeLocation">160,1938.5</av:Point>
                                                              <av:Size x:Key="ShapeSize">200,83</av:Size>
                                                              <av:PointCollection x:Key="ConnectorLocation">480,1241.5 480,1291.5</av:PointCollection>
                                                            </scg:Dictionary>
                                                          </sap:WorkflowViewStateService.ViewState>
                                                          <Sequence DisplayName="Get Sent Email Message" sap:VirtualizedContainerService.HintSize="648,2183" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="x:String" Name="strSentEmailSubject" />
                                                              <Variable x:TypeArguments="x:Int32" Name="intLoopCounter" />
                                                              <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listSentMailMessage" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:ReportStatus DisplayName="Report Status - Checking for Sent Email" sap:VirtualizedContainerService.HintSize="586,91" sap2010:WorkflowViewState.IdRef="ReportStatus_2" StatusText="[now.ToString(&quot;HH:mm:ss&quot;) +&quot; Checking for Sent Email&quot;]" />
                                                            <Assign DisplayName="Initialise Loop Counter" sap:VirtualizedContainerService.HintSize="586,83" sap2010:WorkflowViewState.IdRef="Assign_35">
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Int32">[intLoopCounter]</OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Keep looping until the email appears in Sent items." DisplayName="Do While" sap:VirtualizedContainerService.HintSize="586,1253" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_3">
                                                              <ui:InterruptibleDoWhile.Body>
                                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="552,1085" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Assign DisplayName="Increment Counter" sap:VirtualizedContainerService.HintSize="510,83" sap2010:WorkflowViewState.IdRef="Assign_36">
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">[intLoopCounter]</OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">[intLoopCounter + 1]</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Delay Duration="00:00:02" sap:VirtualizedContainerService.HintSize="510,91" sap2010:WorkflowViewState.IdRef="Delay_2" />
                                                                  <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[g_Config(&quot;AccountName&quot;).ToString]" sap2010:Annotation.AnnotationText="Get last sent email that matches the email subject text." DisplayName="Get Outlook Mail Messages" Filter="[String.Format(&quot;@SQL=&quot;&quot;urn:schemas:httpmail:date&quot;&quot; &gt;= '{0}' AND &quot;&quot;urn:schemas:httpmail:subject&quot;&quot; = '{1}'&quot;, DateTime.UtcNow.AddMinutes(-15).ToString(&quot;yyyy-MM-dd HH:mm:ss&quot;),  strProjectSubject)]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="510,85" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_3" MailFolder="Sent Items" MarkAsRead="False" Messages="[listSentMailMessage]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </ui:GetOutlookMailMessages>
                                                                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="510,143" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Loop &quot; + intLoopCounter.ToString + &quot; Emails found &quot; + listSentMailMessage.Count.ToString]" />
                                                                  <If Condition="[listSentMailMessage.Count &gt; 0]" DisplayName="If Message Found" sap:VirtualizedContainerService.HintSize="510,435" sap2010:WorkflowViewState.IdRef="If_7">
                                                                    <If.Then>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="476,171" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                        <Assign DisplayName="Assign Subject of Sent Email" sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_37">
                                                                          <Assign.To>
                                                                            <OutArgument x:TypeArguments="x:String">[strSentEmailSubject]</OutArgument>
                                                                          </Assign.To>
                                                                          <Assign.Value>
                                                                            <InArgument x:TypeArguments="x:String">[listSentMailMessage(0).Subject]</InArgument>
                                                                          </Assign.Value>
                                                                        </Assign>
                                                                      </Sequence>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Sequence sap:VirtualizedContainerService.HintSize="300,81" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                                        <sap:WorkflowViewStateService.ViewState>
                                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                          </scg:Dictionary>
                                                                        </sap:WorkflowViewStateService.ViewState>
                                                                      </Sequence>
                                                                    </If.Else>
                                                                  </If>
                                                                </Sequence>
                                                              </ui:InterruptibleDoWhile.Body>
                                                              <ui:InterruptibleDoWhile.Condition>
                                                                <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="strProjectSubject &lt;&gt; strSentEmailSubject AND intLoopCounter &lt; CInt(g_Config(&quot;MaxEmailLoopCounter&quot;))" />
                                                              </ui:InterruptibleDoWhile.Condition>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:InterruptibleDoWhile>
                                                            <If Condition="[intLoopCounter = CInt(g_Config(&quot;MaxEmailLoopCounter&quot;))]" DisplayName="If Cannot Find Sent Item After Max Attempts" sap:VirtualizedContainerService.HintSize="586,393" sap2010:WorkflowViewState.IdRef="If_8">
                                                              <If.Then>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="376,210" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                  <Throw sap2010:Annotation.AnnotationText="Unable to find sent email" DisplayName="Throw Business Exception - Unable to Find Sent Email" Exception="[New BusinessRuleException(&quot;Unable to find sent email &quot; + strProjectSubject)]" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="Throw_4">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                  </Throw>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence sap:VirtualizedContainerService.HintSize="450,103" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                                  <sap:WorkflowViewStateService.ViewState>
                                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                    </scg:Dictionary>
                                                                  </sap:WorkflowViewStateService.ViewState>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                            <ui:MoveOutlookMessage Account="[g_Config(&quot;AccountName&quot;).ToString]" DisplayName="Move Sent Email" sap:VirtualizedContainerService.HintSize="586,92" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_2" MailFolder="[g_Config(&quot;Mail Parent Folder - Part 2&quot;).ToString+g_Config(&quot;Sent Project Email Folder&quot;).ToString]" MailMessage="[listSentMailMessage(0)]" />
                                                          </Sequence>
                                                        </FlowStep>
                                                      </FlowStep.Next>
                                                    </FlowStep>
                                                  </FlowStep.Next>
                                                </FlowStep>
                                              </FlowDecision.True>
                                            </FlowDecision>
                                          </FlowStep.Next>
                                        </FlowStep>
                                      </FlowDecision.True>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <x:Reference>__ReferenceID0</x:Reference>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,233.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,286.5 470,333.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <d1:Get_Credential DisplayName="Get Credential" sap:VirtualizedContainerService.HintSize="200,53" IN_strRequestMessage="Please provide the password for the Badgers Master Spreadsheet. Username can be input as 'N/A'" sap2010:WorkflowViewState.IdRef="Get_Credential_1" in_strCredentialName="Badgers Excel Password" in_strRequestTitle="Provide Excel Spreadsheet Credentials" out_credNetworkCredential="[ExcelCreds]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </d1:Get_Credential>
      <FlowStep.Next>
        <x:Reference>__ReferenceID1</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <FlowStep x:Name="__ReferenceID15">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">370,127.5</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">470,180.5 470,233.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Extract Registration Number" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="Assign_32">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">[strRegistrationNum]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">[Regex.Match(g_TransactionItem.Body, g_Config("Registration Num Regex").ToString, RegexOptions.Multiline).Groups("match").ToString.Trim]</InArgument>
        </Assign.Value>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </Assign>
      <FlowStep.Next>
        <x:Reference>__ReferenceID6</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <x:Reference>__ReferenceID11</x:Reference>
    <x:Reference>__ReferenceID12</x:Reference>
    <x:Reference>__ReferenceID13</x:Reference>
    <x:Reference>__ReferenceID14</x:Reference>
  </Flowchart>
</Activity>